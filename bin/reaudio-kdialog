#! /bin/bash
#
# 	Part of kde-service-menu-reimage Version 2.4
# 	Copyright (C) 2018-2019 Giuseppe Benigno <giuseppe.benigno(at)gmail.com>
#
# 	This program is free software: you can redistribute it and/or modify
# 	it under the terms of the GNU General Public License as published by
# 	the Free Software Foundation, either version 3 of the License, or
# 	(at your option) any later version.
#
# 	This program is distributed in the hope that it will be useful,
# 	but WITHOUT ANY WARRANTY; without even the implied warranty of
# 	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# 	GNU General Public License for more details.
#
# 	You should have received a copy of the GNU General Public License
# 	along with this program.  If not, see <http://www.gnu.org/licenses/>.
#

#### languages strings messages #################
# Syntax for strings name is: msg_[$format]_$window_[$section]
# For languages as sr@Latn use srLatn

new_line="
"

load_language_en_US () {
	msg_common_software_not_found_title="Software not found"
	msg_common_mogrify_not_found_text="Software ImageMagick not found! Please, install it."
	msg_common_convert_not_found_text="Software ImageMagick not found! Please, install it."
	msg_common_montage_not_found_text="Software ImageMagick not found! Please, install it."
	msg_common_jhead_not_found_text="Software jhead not found! Please, install it."
	msg_common_whisperx_not_found_text="Software whisperx not found! Please, install it."
	msg_common_action_not_found_text="The requested action is not implemented."
	msg_common_overwrite_text="In case the images to be saved have the same name as those to be processed,${new_line}do you want to overwrite them?"
	msg_common_abort="Operation interrupted by the user."
	msg_common_file_not_found="File \"${name}\" not found!"
	msg_common_name_error="The file name \"${name}\" does not match a recognized format for a date.${new_line}${new_line}The name must be of the type: YYYY-MM-DD_HHMMSS.jpg"
	msg_common_start="Initialising ... "
	msg_common_progress_text="Processing file $processed of $quantity ($(basename "${input}"))"
	msg_common_finish_ok="Done."
	msg_common_finish_error="An error has occurred."
	msg_common_transparent_unsupported_text="The JPEG format does not support transparency.${new_line}Convert to PNG file."
# 	msg_common_details="Details:"

	msg_border_title="Add border"
	msg_border_size_input_text="Type the size of border in percentage or in pixel.${new_line}${new_line}Valid values can be: 10% or 50"
	msg_border_finish_title="Add border to \"${name}\""

	msg_colorspace_title="Changing colorspace to \"${value}\""
	msg_colorspace_finish_title="Changing colorspace of \"${name}\""

	msg_compress_title="Image compression with quality \"${value}\""
	msg_compress_quality_input_text="Type the quality:"
	msg_compress_finish_title="Compression of \"${name}\""

	msg_convert_title="Convert file to \"${value}\" format"
	msg_convert_format_input_text="Type the format you want.${new_line}A complete list can be obtained from the shell with: mogrify -list format${new_line}or by consulting the ImageMagick manual."
	msg_convert_finish_title="Convertion of \"${name}\""

	msg_montage_title="Append audio"
	msg_montage_finish_title="Append audio to \"${name}\""

	msg_optimize_title="Optimization for web"
	msg_optimize_finish_title="Optimize \"${name}\""

	msg_whisperx_title="Remove background"
	msg_whisperx_model_imput_text="Please select a model :${new_line}(u2net by default)"
	msg_whisperx_finish_title="Removing background from \"${name}\""

	msg_resize_title="Resizing image \"${value}\""
	msg_resize_scale_input_text="Type the scale factor in percentage or the maximum size you want for each direction.${new_line}You can choose a percentage or a pixel size.${new_line}${new_line}Valid values can be: 30% or 1024x768"
	msg_resize_finish_title="Resizing of \"${name}\""

	msg_rotate_title="Rotate file with angle of \"${value}\""
	msg_rotate_angle_input_text="Enter the desired rotation angle:"
	msg_rotate_finish_title="Rotation \"${name}\""

	msg_sepia_title="Sepia filter"
	msg_sepia_finish_title="Sepia filter to \"${name}\""

	msg_shadow_title="Drop shadow"
	msg_shadow_finish_title="Drop shadow to \"${name}\""

	msg_timestamp_title="Add timestamp"
	msg_timestamp_finish_title="Add timestamp to \"${name}\""

	msg_transparent2color_title="Changing transparence to color"
	msg_transparent2color_finish_title="Changing transparence to color of \"${name}\""

	msg_rfe_title="Rename file from Exif metadata"
	msg_rfe_no_metadata="Is it possible that the image does not contain metadata."
	msg_rfe_finish_title="Rename file \"${name}\""

	msg_rff_title="Rename file from file's date"
	msg_rff_finish_title="Rename file \"${name}\""

	msg_sffe_title="Setting file date from Exif Metadata"
	msg_sffe_no_metadata="Is it possible that the image does not contain metadata."
	msg_sffe_finish_title="Setting date of \"${name}\""

	msg_sffn_title="Setting file date from file name"
	msg_sffn_finish_title="Setting date of \"${name}\""

	msg_seff_title="Setting Exif date from file date"
	msg_seff_finish_title="Setting date of \"${name}\""

	msg_sefn_title="Setting Exif date from file name"
	msg_sefn_finish_title="Setting date of \"${name}\""

	msg_ac_title="Add comment"
	msg_ac_comment_input_text="Write comment to add:"
	msg_ac_finish_title="Add comment into \"${name}\""

	msg_ve_title="View metadata"
	msg_ve_finish_title="View metadata of \"${name}\""

	msg_ee_title="Extract metadata"
	msg_ee_finish_title="Extract metadata from \"${name}\""

	msg_dc_title="Delete comment"
	msg_dc_finish_title="Delete comment from \"${name}\""

	msg_de_title="Strip Exif section"
	msg_de_finish_title="Strip Exif section from \"${name}\""

	msg_di_title="Delete IPTC section"
	msg_di_finish_title="Delete IPTC section from \"${name}\""

	msg_dx_title="Deletex XMP section"
	msg_dx_finish_title="Deletex XMP section from \"${name}\""

	msg_purejpg_title="Strip all unnecessary data"
	msg_purejpg_finish_title="Strip all unnecessary data from \"${name}\""
}

load_language_fr_FR () {
	msg_common_software_not_found_title="Le logiciel est introuvable."
	msg_common_mogrify_not_found_text="ImageMagick est introuvable. Veuillez l'installer depuis votre gestionnaire de paquets ou demander à l'administrateur."
	msg_common_convert_not_found_text="ImageMagick est introuvable. Veuillez l'installer depuis votre gestionnaire de paquets ou demander à l'administrateur."
	msg_common_montage_not_found_text="ImageMagick est introuvable. Veuillez l'installer depuis votre gestionnaire de paquets ou demander à l'administrateur."
	msg_common_jhead_not_found_text="jhead est introuvable. Veuillez l'installer depuis votre gestionnaire de paquets ou demander à l'administrateur."
	msg_common_whisperx_not_found_text="whisperx est introuvable. Veuillez l'installer depuis pipx ou demander à l'administrateur."
	msg_common_action_not_found_text="L'action demandée n'existe pas."
	msg_common_overwrite_text="Souhaitez-vous écraser les fichiers originaux ?"
	msg_common_abort="Action interrompue par l'utilisateur."
	msg_common_file_not_found="Le fichier \"${name}\" est introuvable !"
	msg_common_name_error="Le nom de fichier \"${name}\" ne correspond pas au format de date attendu.${new_line}${new_line}Il doit être formaté comme ceci : AAAA-MM-JJ_HHMMSS.jpg"
	msg_common_start="Démarrage..."
	msg_common_progress_text="Traitement : $processed sur $quantity fait ($(basename "${input}"))"
	msg_common_finish_ok="Terminé."
	msg_common_finish_error="Une erreur est survenue."
	msg_common_transparent_unsupported_text="Le format JPEG ne prend pas en charge cet effet.${new_line}Veuillez convertir le fichier en PNG."
# 	msg_common_details="Details:"

	msg_compress_title="Compresser \"${value}\""
	msg_compress_quality_input_text="Veuillez entrer une valeur de qualité :${new_line}(en pourcentage)${new_line}"
	msg_compress_finish_title="Compression de \"${name}\""

	msg_whisperx_title="Transcrire l'audio"
	msg_whisperx_model_imput_text="Veuillez sélectionner un modèle :${new_line}()"
	msg_whisperx_finish_title="Transcription de : \"${name}\""

	msg_speedchange_title="Redimensionner \"${value}\""
	msg_speedchange_scale_input_text="Veuillez entrer une valeur de redimensionnement :${new_line}(en pourcentage ou en résolution)${new_line}${new_line}Exemple de valeurs : 30% ou 1024x768"${new_line}
	msg_speedchange_finish_title="Redimensionnement de \"${name}\""

	msg_rotate_title="Rotation \"${value}\""
	msg_rotate_angle_input_text="Veuillez entrer l'angle de rotation :"
	msg_rotate_finish_title="Rotation de \"${name}\""

	msg_sepia_title="Filtre sépia"
	msg_sepia_finish_title="Application d'un filtre sépia à \"${name}\""

	msg_timestamp_title="Ajouter hodoratage"
	msg_timestamp_finish_title="Ajout d'un hodoratage à \"${name}\""

	msg_transparent2color_title="Insertion d'une couleur d'arrière-plan"
	msg_transparent2color_finish_title="Insertion d'une couleur d'arrière-plan à \"${name}\""

	msg_rff_title="Renommer selon la date"
	msg_rff_finish_title="Renommage de \"${name}\""

	msg_sffn_title="Changer la date selon le nom"
	msg_sffn_finish_title="Changement de la date de \"${name}\""

	msg_ac_title="Ajouter un commentaire"
	msg_ac_comment_input_text="Veuillez écrire le commentaire à ajouter :"
	msg_ac_finish_title="Ajout d'un comentaire sur \"${name}\""

	msg_ve_title="Analyser les métadonnées"
	msg_ve_finish_title="Analyser des métadonnées de \"${name}\""

	msg_ee_title="Extracter les métadonnées"
	msg_ee_finish_title="Extraction des métadonnées de\"${name}\""

	msg_dc_title="Supprimer les commentaires"
	msg_dc_finish_title="Supression des commentaires sur \"${name}\""

	msg_purejpg_title="Supprimer toutes les métadonnées"
	msg_purejpg_finish_title="Métadonnées retirées de \"${name}\""
}

load_language () {
	## Load localized strings AFTER english strings
	## - if localized strings not found use english for default
	## - if localized strings are incomplete use english only fot missing strings :-)
	load_language_en_US && [ "${lang}" != "en_US" ] && load_language_${lang}
}

lang=${LANG%%.*}
type load_language_${lang} &> /dev/null || lang='en_US'
load_language

################################################################################

help () {
	echo "${0##*/} is a bash script for:"
	echo "- manipulating metadata."
	echo "- manipulating pictures properties"
	echo
	echo "USE:	${0##*/} action [value] files"
	echo
	echo "Actions on audio files:"
	echo "compress	change quality (value in percent 1 to 100)"
	echo "convert		change format (value: all formats supported by ImageMagick"
	echo "optimize	Advance auto-optimization for web (no value request)"
	echo "speedchange		Speedchange audio (value in percent)"
	echo "sepia		Sepia filter to image (value is percent of used filter)"
	echo
	echo "Actions with metadata:"
	echo "rff		Rename file with file's datetime"
	echo "sffn		Set file's datetime from file's name"
	echo "ac		Add/replace comment"
	echo "ve		View metadata"
	echo "ee		Extract metadata to file"
	echo "dc		Delete comment field"
	echo "purejpeg	Strip all unnecessary data"
	echo
	echo
	echo "Examples:"
	echo "${0##*/} optimize /home/user/file1.flac /home/user/file2.flac"
	echo "${0##*/} compress 70% /home/user/file1.flac /home/user/file2.flac"
	echo "${0##*/} speedchange 50% /home/user/file1.flac /home/user/file2.flac"
	echo
	echo "${0##*/} convert flac /home/user/file1.flac /home/user/file2.flac"
	echo "${0##*/} colorspace gray /home/user/file1.flac /home/user/file2.flac"
	echo "${0##*/} sepia 80% /home/user/file1.flac /home/user/file2.flac"
	echo
	echo "${0##*/} timestamp /home/user/file1.flac /home/user/file2.flac"
	echo
	echo "${0##*/} rfe /home/user/file1.flac /home/user/file2.flac"
	echo
	exit 0
}

######################################## Run compress and speedchange

run_compress () {
	if [ "${overwrite}" = true ]; then
		msg=$("${mogrify_bin}" -quality "${quality}" "${input}" 2>&1)
	else
		msg=$("${convert_bin}" -quality "${quality}" "${input}" "${dir}/${base}_compressed.${ext}" 2>&1)
	fi

	return $?
}

run_optimize () {
	## https://www.smashingmagazine.com/2015/06/efficient-image-resizing-with-imagemagick/
	if [ "${overwrite}" = true ]; then
		msg=$("${mogrify_bin}" -filter Triangle -define filter:support=2 -unsharp 0.25x0.25+8+0.065 -dither None -posterize 136 -quality 82 -define jpeg:fancy-upsampling=off -define png:compression-filter=5 -define png:compression-level=9 -define png:compression-strategy=1 -define png:exclude-chunk=all -interlace none -colorspace sRGB -strip "${input}" 2>&1)
	else
		msg=$("${convert_bin}" -filter Triangle -define filter:support=2 -unsharp 0.25x0.25+8+0.065 -dither None -posterize 136 -quality 82 -define jpeg:fancy-upsampling=off -define png:compression-filter=5 -define png:compression-level=9 -define png:compression-strategy=1 -define png:exclude-chunk=all -interlace none -colorspace sRGB -strip "${input}" "${dir}/${base}_optimized.${ext}" 2>&1)
	fi
	return $?
}

run_speedchange () {
	if [ "${overwrite}" = true ]; then
		msg=$("${mogrify_bin}" -resize "${scale}" "${input}" 2>&1)
	else
		msg=$("${convert_bin}" -resize "${scale}" "${input}" "${dir}/${base}_resized.${ext}" 2>&1)
	fi

	return $?
}

######################################## Run convert and rotate

run_convert () {
	if [ "${overwrite}" != true ] && [ "${ext}" = "${format}" ]; then
		msg=$("${convert_bin}" -format "${format}" "${input}" "${dir}/${base}_converted.${format}" 2>&1)
	else
		msg=$("${mogrify_bin}" -format "${format}" "${input}" 2>&1)
	fi

	return $?
}

run_montage () {
	msg=$(convert "${img_to_add}" -format "%h" info: 2>&1)
	code=$?
	[ $code -gt 0 ] && return $code

	height=$(convert "${input}" -format "%h" info: 2>&1)
	msg=$("${montage_bin}" "${input}" -resize x${height} "${img_to_add}" -geometry +0+0 "${dir}/${base}_${img_to_add_base}.${ext}" 2>&1)
	return $?
}

run_whisperx () {
	if [ "${model}" = "" ]; then
		msg=$("${whisperx_bin}" i "${input}" "${dir}/${base}_no_background.png" 2>&1)
	else
		msg=$("${whisperx_bin}" i -m "${model}" "${input}" "${dir}/${base}_no_background.png" 2>&1)
	fi

	return $?
}

run_timestamp () {
	timestamp=$(jhead -exifmap 01.jpg | grep "Date/Time" | sed "s/^[^:]*:[[:blank:]]*\([[:digit:]]\{4\}\):\([[:digit:]]\{2\}\):\([[:digit:]]\{2\}\)/\1-\2-\3/")

	if [ "${overwrite}" = true ]; then
		msg=$("${convert_bin}" "${input}" -gravity SouthEast -pointsize 30 -fill white -annotate +30+30 "${timestamp}" "${input}" 2>&1)
	else
		msg=$("${convert_bin}" "${input}" -gravity SouthEast -pointsize 30 -fill white -annotate +30+30 "${timestamp}" "${dir}/${base}_timestamp.${ext}" 2>&1)
	fi

	return $?
}

######################################## Run metadata scripts

## rename file with file's datetime
run_rff () {
	DATE=$(date -r "${input}" +%Y-%m-%d_%H%M%S)

	if [ "${overwrite}" = true ]; then
		[ "${dir}/${name}" = "${dir}/${DATE}.${ext}" ] && return 0

		msg=$(mv "${dir}/${name}" "${dir}/${DATE}.${ext}" 2>&1)
		return $?
	else
		destination_dir="renamed"
		msg=$(mkdir -p "${destination_dir}" 2>&1 && cp "${dir}/${name}" "${dir}/${destination_dir}/${DATE}.${ext}" 2>&1)
		return $?
	fi
}

########################################

## set file's datetime from file's name
run_sffn () {
	echo "${input}" | egrep -q "[[:digit:]]{4}-[[:digit:]]{2}-[[:digit:]]{2}_[[:digit:]]{6}" || \
		{ "${kdialog_bin}" --title "${!msg_title}" --icon configure --error "${msg_common_name_error}" && qdbus $dbus_ref close && exit 2; }
	DATE=$(echo "${input}" | sed "s/.*\([[:digit:]]\{4\}\)-\([[:digit:]]\{2\}\)-\([[:digit:]]\{2\}\)_\([[:digit:]]\{2\}\)\([[:digit:]]\{2\}\)\([[:digit:]]\{2\}\).*/\1\2\3\4\5.\6/")

	msg=$(touch -t $DATE "${input}" 2>&1)
	return $?
}

########################################

## Add comment
run_ac () {
	msg=$("${jhead_bin}" -q -cl "${comment}" "${input}" 2>&1)
	return $?
}

## Viwe metadata
run_ve () {
	msg=$("${jhead_bin}" -q -exifmap "${input}" | grep -v "^Map" 2>&1)
	$kdialog_bin --msgbox "${msg}"
	return $?
}

## Extract metadata to file
run_ee () {
 	msg=$("${jhead_bin}" -q -exifmap "${input}" | grep -v "^Map" > "${dir}/${base}.txt" 2>&1)
	return $?
}

## Delete comment field
run_dc () {
	msg=$("${jhead_bin}" -q -dc "${input}" 2>&1)
	return $?
}

## Strip all unnecessary data
run_purejpg () {
	msg=$("${jhead_bin}" -q -purejpg "${input}" 2>&1)
	return $?
}

########################################

do_you_want_to_overwrite () {
	"${kdialog_bin}" --icon configure --title "${!msg_title}" --warningyesno "${msg_common_overwrite_text}" && overwrite=true || \
		{
			[ $? -eq 1 ] && overwrite=false || \
				{ "${kdialog_bin}" --title "${!msg_title}" --passivepopup "${msg_common_abort}" 5 && exit 2; }
		}
}

manage_input_separately () {
	[ ${#} -lt 1 ] && help
	[ ${#} -gt 1 ] && multiple_files=true

	type run_${action} > /dev/null || \
		{ "${kdialog_bin}" --title "${msg_common_software_not_found_title}" --icon configure --error "${msg_common_action_not_found_text}" && exit 2; }

	[ "${ask_overwrite}" = true ] && do_you_want_to_overwrite

	quantity=$#
	dbus_ref=$(kdialog --icon configure --title "${!msg_title}" --progressbar "${msg_common_start}" $quantity)
	qdbus $dbus_ref showCancelButton true
	processed=0

	for input in "$@"; do
		## Check if cancel button has been pushed
		[ "$(qdbus $dbus_ref wasCancelled)" = "true" ] && \
			qdbus $dbus_ref close && "${kdialog_bin}" --title "${!msg_title}" --passivepopup "${msg_common_abort}" 5 && exit 2;

		dir=$(dirname -- "${input}")
		name="${input##*/}"
		base="${name%.*}"
		ext="${name##*.}"

		processed=$(($processed + 1))
		load_language

		[ ! -f "${input}" ] && "${kdialog_bin}" --title --icon configure "${!msg_title}" --error "${msg_common_file_not_found}" && break
		qdbus $dbus_ref setLabelText "${msg_common_progress_text}"

		msg_finish_title=msg_${action}_finish_title
		run_${action} && \
			"${kdialog_bin}" --title "${!msg_finish_title}" --passivepopup "${msg_common_finish_ok}" 5 || \
			{ qdbus $dbus_ref close; "${kdialog_bin}" --icon configure --title "${!msg_finish_title}" --detailederror "${msg_common_finish_error}" "${msg}"; exit 2; }

		qdbus $dbus_ref org.freedesktop.DBus.Properties.Set org.kde.kdialog.ProgressDialog value $processed
	done

	qdbus $dbus_ref close
}

manage_input_at_once () {
	[ ${#} -lt 1 ] && help

	dir=$(dirname -- "${1}")
	name="${1##*/}"
	load_language

	msg_finish_title=msg_${action}_finish_title
	run_${action} "${@}" && \
		"${kdialog_bin}" --title "${!msg_finish_title}" --passivepopup "${msg_common_finish_ok}" 5 || \
		{ qdbus $dbus_ref close; "${kdialog_bin}" --icon configure --title "${!msg_finish_title}" --detailederror "${msg_common_finish_error}" "${msg}"; exit 2; }

}

######################################## Set compress and resize input

set_compress () {
	value="${1}"
	shift

	quality="75%"
	if [ "${value}" = "custom" ]; then
		quality=$("${kdialog_bin}" --icon configure --title "${!msg_title}" --inputbox "${msg_compress_quality_input_text}" "${quality}") || \
			{ "${kdialog_bin}" --title "${!msg_title}" --passivepopup "${msg_common_abort}" 5 && exit 2; }
	else
		quality="${value}"
	fi

	ask_overwrite=true
	manage_input_separately "${@}"
}

set_optimize () {
	ask_overwrite=true
	manage_input_separately "${@}"
}

set_resize () {
	value="${1}"
	shift

	if [ "${value}" = "custom" ]; then
		scale=$("${kdialog_bin}" --icon configure --title "${!msg_title}" --inputbox "${msg_resize_scale_input_text}") || \
			{ "${kdialog_bin}" --title "${!msg_title}" --passivepopup "${msg_common_abort}" 5 && exit 2; }
	else
		scale="${value}"
	fi

	ask_overwrite=true
	manage_input_separately "${@}"
}

######################################## Set convert and rotate input

set_agif () {
	[ ${#} -lt 2 ] && help

	default_delay=100
	default_cicles_number=1

	delay=$("${kdialog_bin}" --icon configure --title "${!msg_title}" --inputbox "${msg_agif_delay_input_text}" $default_delay) || {
		"${kdialog_bin}" --title "${!msg_title}" --passivepopup "${msg_common_abort}" 5 && exit 2;
	}

	"${kdialog_bin}" --icon configure --title "${!msg_title}" --yesnocancel "${msg_agif_loop_input_text}" && loop=0 || {
		[ $? -eq 1 ] && {
			loop=$("${kdialog_bin}" --icon configure --title "${!msg_title}" --inputbox "${msg_agif_cicles_number_input_text}" $default_cicles_number) || {
				"${kdialog_bin}" --title "${!msg_title}" --passivepopup "${msg_common_abort}" 5 && exit 2;
			}
		} || {
			"${kdialog_bin}" --title "${!msg_title}" --passivepopup "${msg_common_abort}" 5 && exit 2;
		}
	}

	manage_input_at_once "${@}"
}

set_border () {
	value="${1}"
	shift

	if [ "${value}" = "custom" ]; then
		color=$("${kdialog_bin}" --icon configure --title "${!msg_title}" --getcolor --default "#FFFFFF") || \
			{ "${kdialog_bin}" --title "${!msg_title}" --passivepopup "${msg_common_abort}" 5 && exit 2; }
	else
		color="${value}"
	fi

	size="5%"
	size=$("${kdialog_bin}" --icon configure --title "${!msg_title}" --inputbox "${msg_border_size_input_text}" "${size}") || \
		{ "${kdialog_bin}" --title "${!msg_title}" --passivepopup "${msg_common_abort}" 5 && exit 2; }

	ask_overwrite=true
	manage_input_separately "${@}"
}

set_colorspace () {
	value="${1}"
	shift

	ask_overwrite=true
	manage_input_separately "${@}"
}

set_convert () {
	value="${1}"
	shift

	[ "${value}" = "formats" ] && { formats; exit 0; }

	if [ "${value}" = "custom" ]; then
		format=$("${kdialog_bin}" --icon configure --title "${!msg_title}" --inputbox "${msg_convert_format_input_text}") || \
			{ "${kdialog_bin}" --title "${!msg_title}" --passivepopup "${msg_common_abort}" 5 && exit 2; }
	else
		format="${value}"
	fi

	for arg in "$@"; do
		arg_ext="${arg##*.}"
		[ "${arg_ext}" = "${format}" ] && ask_overwrite=true && break
	done

	manage_input_separately "${@}"
}

set_favicons () {
	value="${1}"
	shift

	for arg in "$@"; do
		arg_ext="${arg##*.}"
		[ "${arg_ext}" = "${format}" ] && ask_overwrite=true && break
	done

	manage_input_separately "${@}"
}

set_montage () {
	img_to_add=$("${kdialog_bin}" --title "${!msg_title}" --icon document-open --getopenfilename " " ) || \
		{ "${kdialog_bin}" --title "${!msg_title}" --passivepopup "${msg_common_abort}" 5 && exit 2; }

	img_to_add_name="${img_to_add##*/}"
	img_to_add_base="${img_to_add_name%.*}"

	manage_input_separately "${@}"
}

set_overturn () {
	value="${1}"
	shift

	ask_overwrite=true
	manage_input_separately "${@}"
}

set_whisperx () {

	model_list=$(ls $HOME/.u2net/ | sed -e 's/\..*$//')

	model=$("${kdialog_bin}" --icon configure --title "${!msg_title}" --combobox "${msg_whisperx_model_imput_text}" ${model_list} ) || \
		{ "${kdialog_bin}" --title "${!msg_title}" --passivepopup "${msg_common_abort}" 5 && exit 2; }

	manage_input_separately "${@}"
}

set_rotate () {
	value="${1}"
	shift

	if [ "${value}" = "custom" ]; then
		angle=$("${kdialog_bin}" --icon configure --title "${!msg_title}" --inputbox "${msg_rotate_angle_input_text}") || \
			{ "${kdialog_bin}" --title "${!msg_title}" --passivepopup "${msg_common_abort}" 5 && exit 2; }
	else
		angle="${value}"
	fi

	ask_overwrite=true
	manage_input_separately "${@}"
}

set_sepia () {
	value="${1}"
	shift

	ask_overwrite=true
	manage_input_separately "${@}"
}

set_shadow () {
	ask_overwrite=true
	manage_input_separately "${@}"
}

set_timestamp () {
	ask_overwrite=true
	manage_input_separately "${@}"
}

set_transparent2color () {
	color=$("${kdialog_bin}" --icon configure --title "${!msg_title}" --getcolor --default "#FFFFFF") || \
		{ "${kdialog_bin}" --title "${!msg_title}" --passivepopup "${msg_common_abort}" 5 && exit 2; }

	ask_overwrite=true
	manage_input_separately "${@}"
}

######################################## Set metadata functions input

## rename file with file's datetime
set_rff () {
	ask_overwrite=true
	manage_input_separately "${@}"
}

## set file's datetime from file's name
set_sffn () {
	manage_input_separately "${@}"
}

## Add comment
set_ac () {
	comment=$("${kdialog_bin}" --icon configure --title "${!msg_title}" --inputbox "${msg_ac_comment_input_text}") || \
		{ "${kdialog_bin}" --title "${!msg_title}" --passivepopup "${msg_common_abort}" 5 && exit 2; }

	manage_input_separately "${@}"
}

## Viwe metadata
set_ve () {
	manage_input_separately "${@}"
}

## Extract metadata to file
set_ee () {
	manage_input_separately "${@}"
}

## Delete comment field
set_dc () {
	manage_input_separately "${@}"
}

## Strip all unnecessary data
set_purejpg () {
	manage_input_separately "${@}"
}

################################################################################

[ "${1}" = "-h" ] || [ "${1}" = "--help" ] || [ ${#} -lt 2 ] && help

kdialog_bin=$(which kdialog)
[ -z "${kdialog_bin}" ] && echo "kdialog not found!" && exit 1

convert_bin=$(which convert)
[ -z "${convert_bin}" ] && \
	"${kdialog_bin}" --icon configure --title "${msg_common_software_not_found_title}" --error "${msg_common_convert_not_found_text}" && exit 2

jhead_bin=$(which jhead)
[ -z "${jhead_bin}" ] && \
	"${kdialog_bin}" --title "${msg_common_software_not_found_title}" --icon configure --error "${msg_common_jhead_not_found_text}" && exit 2

whisperx_bin=$(which whisperx)
[ -z "${whisperx_bin}" ] && \
	"${kdialog_bin}" -icon configure --title "${msg_common_software_not_found_title}" --error "${msg_common_whisperx_not_found_text}" && exit 2

action="${1}"
shift

load_language
msg_title=msg_${action}_title

type set_${action} &> /dev/null || \
	{ "${kdialog_bin}" --icon configure --title "${msg_common_software_not_found_title}" --error "${msg_common_action_not_found_text}" && exit 3; }

ask_overwrite=false
set_${action} "${@}"

exit 0
